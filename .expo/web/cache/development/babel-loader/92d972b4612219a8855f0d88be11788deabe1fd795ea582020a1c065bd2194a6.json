{"ast":null,"code":"var db = require(\"../config/db\");\nvar get_contacts = function get_contacts(id, done) {\n  if (id === undefined || id === null) return done(true, null);else {\n    var query = 'SELECT user_id, given_name AS first_name, family_name AS last_name, email FROM whatsthat_users ';\n    query += 'WHERE user_id IN (SELECT contact_id FROM whatsthat_user_contacts WHERE user_id=' + id + ' AND blocked = 0)';\n    query += 'OR user_id IN (SELECT user_id FROM whatsthat_user_contacts WHERE contact_id=' + id + ' AND blocked = 0)';\n    var results = [];\n    var errors = [];\n    db.each(query, [], function (err, row) {\n      if (err) errors.push(err);\n      results.push(row);\n    }, function (err) {\n      if (err) return done(err, null);\n      if (errors.length > 0) return done(errors, null);\n      return done(null, results);\n    });\n  }\n};\nvar add_contact = function add_contact(user_id, contact_id, done) {\n  if (user_id === undefined || user_id === null || contact_id === undefined || contact_id === null) {\n    return done(true);\n  }\n  var query = \"INSERT INTO whatsthat_user_contacts (user_id, contact_id) VALUES (?, ?)\";\n  db.run(query, [user_id, contact_id], function (err) {\n    if (err) {\n      return done(err);\n    }\n    return done(false);\n  });\n};\nvar remove_contact = function remove_contact(user_id, contact_id, done) {\n  if (user_id === undefined || user_id === null || contact_id === undefined || contact_id === null) {\n    return done(true);\n  }\n  var query = \"DELETE FROM whatsthat_user_contacts WHERE (user_id = ? AND contact_id =?) OR (user_id = ? AND contact_id =?)\";\n  db.run(query, [user_id, contact_id, contact_id, user_id], function (err) {\n    if (err) {\n      return done(err);\n    }\n    return done(false);\n  });\n};\nvar get_blocked = function get_blocked(id, done) {\n  if (id === undefined || id === null) return done(true, null);else {\n    var query = 'SELECT user_id, given_name AS first_name, family_name AS last_name, email FROM whatsthat_users ';\n    query += 'WHERE user_id IN (SELECT contact_id FROM whatsthat_user_contacts WHERE user_id=' + id + ' AND blocked = 1)';\n    var results = [];\n    var errors = [];\n    db.each(query, [], function (err, row) {\n      if (err) errors.push(err);\n      results.push(row);\n    }, function (err) {\n      if (err) return done(err, null);\n      if (errors.length > 0) return done(errors, null);\n      return done(null, results);\n    });\n  }\n};\nvar is_contact = function is_contact(user_id, contact_id, done) {\n  if (user_id === undefined || user_id === null || contact_id === undefined || contact_id === null) {\n    return done(true);\n  }\n  var query = \"SELECT * FROM whatsthat_user_contacts WHERE user_id = ? AND contact_id = ?\";\n  db.get(query, [user_id, contact_id], function (err, row) {\n    if (err) {\n      return done(err, null);\n    }\n    return done(false, row);\n  });\n};\nvar block_contact = function block_contact(user_id, contact_id, done) {\n  if (user_id === undefined || user_id === null || contact_id === undefined || contact_id === null) {\n    return done(true);\n  }\n  var query = \"UPDATE whatsthat_user_contacts SET blocked = 1 WHERE user_id = ? AND contact_id = ?\";\n  db.run(query, [user_id, contact_id], function (err) {\n    if (err) {\n      return done(err);\n    }\n    return done(false);\n  });\n};\nvar unblock_contact = function unblock_contact(user_id, contact_id, done) {\n  if (user_id === undefined || user_id === null || contact_id === undefined || contact_id === null) {\n    return done(true);\n  }\n  var query = \"UPDATE whatsthat_user_contacts SET blocked = 0 WHERE user_id = ? AND contact_id = ?\";\n  db.run(query, [user_id, contact_id], function (err) {\n    if (err) {\n      return done(err);\n    }\n    return done(false);\n  });\n};\nmodule.exports = {\n  get_contacts: get_contacts,\n  add_contact: add_contact,\n  remove_contact: remove_contact,\n  get_blocked: get_blocked,\n  is_contact: is_contact,\n  block_contact: block_contact,\n  unblock_contact: unblock_contact\n};","map":{"version":3,"names":["db","require","get_contacts","id","done","undefined","query","results","errors","each","err","row","push","length","add_contact","user_id","contact_id","run","remove_contact","get_blocked","is_contact","get","block_contact","unblock_contact","module","exports"],"sources":["C:/Users/bahvd/source/repos/mobileapp/app/models/contact.server.models.js"],"sourcesContent":["const db = require('../config/db');\r\n\r\n\r\n/**\r\n * get the list of contacts for a given user id\r\n */\r\nconst get_contacts = (id, done) => {\r\n    if (id === undefined || id === null)\r\n        return done(true, null);\r\n    else {\r\n        let query = 'SELECT user_id, given_name AS first_name, family_name AS last_name, email FROM whatsthat_users ';\r\n        query += 'WHERE user_id IN (SELECT contact_id FROM whatsthat_user_contacts WHERE user_id=' + id + ' AND blocked = 0)';\r\n        query += 'OR user_id IN (SELECT user_id FROM whatsthat_user_contacts WHERE contact_id=' + id + ' AND blocked = 0)';\r\n\r\n        let results = []\r\n        let errors = []\r\n\r\n        db.each(\r\n            query,\r\n            [],\r\n            (err, row) => {\r\n                if(err) errors.push(err);\r\n\r\n                results.push(row);\r\n            },\r\n            (err) => {\r\n                if(err) return done(err, null);\r\n                if(errors.length > 0) return done(errors, null)\r\n\r\n                return done(null, results)\r\n            }\r\n        )\r\n    }\r\n};\r\n\r\n\r\n\r\nconst add_contact = (user_id, contact_id, done) => {\r\n    if(user_id === undefined || user_id === null || contact_id === undefined || contact_id === null){\r\n        return done(true)\r\n    }\r\n\r\n    let query = \"INSERT INTO whatsthat_user_contacts (user_id, contact_id) VALUES (?, ?)\"\r\n\r\n    db.run(query, [user_id, contact_id], function(err){\r\n        if(err) {\r\n            return done(err)\r\n        }\r\n\r\n        return done(false)\r\n    })\r\n}\r\n\r\n\r\n\r\nconst remove_contact = (user_id, contact_id, done) => {\r\n    if(user_id === undefined || user_id === null || contact_id === undefined || contact_id === null){\r\n        return done(true)\r\n    }\r\n\r\n    let query = \"DELETE FROM whatsthat_user_contacts WHERE (user_id = ? AND contact_id =?) OR (user_id = ? AND contact_id =?)\"\r\n\r\n    db.run(query, [user_id, contact_id, contact_id, user_id], function(err){\r\n        if(err) {\r\n            return done(err)\r\n        }\r\n\r\n        return done(false)\r\n    })\r\n}\r\n\r\n\r\n\r\n/**\r\n * get the list of blocked contacts for a given user id\r\n */\r\nconst get_blocked = (id, done) => {\r\n    if (id === undefined || id === null)\r\n        return done(true, null);\r\n    else {\r\n        let query = 'SELECT user_id, given_name AS first_name, family_name AS last_name, email FROM whatsthat_users ';\r\n        query += 'WHERE user_id IN (SELECT contact_id FROM whatsthat_user_contacts WHERE user_id=' + id + ' AND blocked = 1)';\r\n\r\n        let results = []\r\n        let errors = []\r\n\r\n        db.each(\r\n            query,\r\n            [],\r\n            (err, row) => {\r\n                if(err) errors.push(err);\r\n\r\n                results.push(row);\r\n            },\r\n            (err) => {\r\n                if(err) return done(err, null);\r\n                if(errors.length > 0) return done(errors, null)\r\n\r\n                return done(null, results)\r\n            }\r\n        )\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nconst is_contact = (user_id, contact_id, done) => {\r\n    if(user_id === undefined || user_id === null || contact_id === undefined || contact_id === null){\r\n        return done(true)\r\n    }\r\n\r\n    let query = \"SELECT * FROM whatsthat_user_contacts WHERE user_id = ? AND contact_id = ?\"\r\n\r\n    db.get(query, [user_id, contact_id], function(err, row){\r\n        if(err) {\r\n            return done(err, null)\r\n        }\r\n\r\n        return done(false, row)\r\n    })\r\n}\r\n\r\n\r\n\r\nconst block_contact = (user_id, contact_id, done) => {\r\n    if(user_id === undefined || user_id === null || contact_id === undefined || contact_id === null){\r\n        return done(true)\r\n    }\r\n\r\n    let query = \"UPDATE whatsthat_user_contacts SET blocked = 1 WHERE user_id = ? AND contact_id = ?\"\r\n\r\n    db.run(query, [user_id, contact_id], function(err){\r\n        if(err) {\r\n            return done(err)\r\n        }\r\n\r\n        return done(false)\r\n    })\r\n}\r\n\r\n\r\n\r\nconst unblock_contact = (user_id, contact_id, done) => {\r\n    if(user_id === undefined || user_id === null || contact_id === undefined || contact_id === null){\r\n        return done(true)\r\n    }\r\n\r\n    let query = \"UPDATE whatsthat_user_contacts SET blocked = 0 WHERE user_id = ? AND contact_id = ?\"\r\n\r\n    db.run(query, [user_id, contact_id], function(err){\r\n        if(err) {\r\n            return done(err)\r\n        }\r\n\r\n        return done(false)\r\n    })\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    get_contacts,\r\n    add_contact,\r\n    remove_contact,\r\n    get_blocked,\r\n    is_contact,\r\n    block_contact,\r\n    unblock_contact\r\n}\r\n"],"mappings":"AAAA,IAAMA,EAAE,GAAGC,OAAO,gBAAgB;AAMlC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,EAAE,EAAEC,IAAI,EAAK;EAC/B,IAAID,EAAE,KAAKE,SAAS,IAAIF,EAAE,KAAK,IAAI,EAC/B,OAAOC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,KACvB;IACD,IAAIE,KAAK,GAAG,iGAAiG;IAC7GA,KAAK,IAAI,iFAAiF,GAAGH,EAAE,GAAG,mBAAmB;IACrHG,KAAK,IAAI,8EAA8E,GAAGH,EAAE,GAAG,mBAAmB;IAElH,IAAII,OAAO,GAAG,EAAE;IAChB,IAAIC,MAAM,GAAG,EAAE;IAEfR,EAAE,CAACS,IAAI,CACHH,KAAK,EACL,EAAE,EACF,UAACI,GAAG,EAAEC,GAAG,EAAK;MACV,IAAGD,GAAG,EAAEF,MAAM,CAACI,IAAI,CAACF,GAAG,CAAC;MAExBH,OAAO,CAACK,IAAI,CAACD,GAAG,CAAC;IACrB,CAAC,EACD,UAACD,GAAG,EAAK;MACL,IAAGA,GAAG,EAAE,OAAON,IAAI,CAACM,GAAG,EAAE,IAAI,CAAC;MAC9B,IAAGF,MAAM,CAACK,MAAM,GAAG,CAAC,EAAE,OAAOT,IAAI,CAACI,MAAM,EAAE,IAAI,CAAC;MAE/C,OAAOJ,IAAI,CAAC,IAAI,EAAEG,OAAO,CAAC;IAC9B,CAAC,CACJ;EACL;AACJ,CAAC;AAID,IAAMO,WAAW,GAAG,SAAdA,WAAWA,CAAIC,OAAO,EAAEC,UAAU,EAAEZ,IAAI,EAAK;EAC/C,IAAGW,OAAO,KAAKV,SAAS,IAAIU,OAAO,KAAK,IAAI,IAAIC,UAAU,KAAKX,SAAS,IAAIW,UAAU,KAAK,IAAI,EAAC;IAC5F,OAAOZ,IAAI,CAAC,IAAI,CAAC;EACrB;EAEA,IAAIE,KAAK,GAAG,yEAAyE;EAErFN,EAAE,CAACiB,GAAG,CAACX,KAAK,EAAE,CAACS,OAAO,EAAEC,UAAU,CAAC,EAAE,UAASN,GAAG,EAAC;IAC9C,IAAGA,GAAG,EAAE;MACJ,OAAON,IAAI,CAACM,GAAG,CAAC;IACpB;IAEA,OAAON,IAAI,CAAC,KAAK,CAAC;EACtB,CAAC,CAAC;AACN,CAAC;AAID,IAAMc,cAAc,GAAG,SAAjBA,cAAcA,CAAIH,OAAO,EAAEC,UAAU,EAAEZ,IAAI,EAAK;EAClD,IAAGW,OAAO,KAAKV,SAAS,IAAIU,OAAO,KAAK,IAAI,IAAIC,UAAU,KAAKX,SAAS,IAAIW,UAAU,KAAK,IAAI,EAAC;IAC5F,OAAOZ,IAAI,CAAC,IAAI,CAAC;EACrB;EAEA,IAAIE,KAAK,GAAG,8GAA8G;EAE1HN,EAAE,CAACiB,GAAG,CAACX,KAAK,EAAE,CAACS,OAAO,EAAEC,UAAU,EAAEA,UAAU,EAAED,OAAO,CAAC,EAAE,UAASL,GAAG,EAAC;IACnE,IAAGA,GAAG,EAAE;MACJ,OAAON,IAAI,CAACM,GAAG,CAAC;IACpB;IAEA,OAAON,IAAI,CAAC,KAAK,CAAC;EACtB,CAAC,CAAC;AACN,CAAC;AAOD,IAAMe,WAAW,GAAG,SAAdA,WAAWA,CAAIhB,EAAE,EAAEC,IAAI,EAAK;EAC9B,IAAID,EAAE,KAAKE,SAAS,IAAIF,EAAE,KAAK,IAAI,EAC/B,OAAOC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,KACvB;IACD,IAAIE,KAAK,GAAG,iGAAiG;IAC7GA,KAAK,IAAI,iFAAiF,GAAGH,EAAE,GAAG,mBAAmB;IAErH,IAAII,OAAO,GAAG,EAAE;IAChB,IAAIC,MAAM,GAAG,EAAE;IAEfR,EAAE,CAACS,IAAI,CACHH,KAAK,EACL,EAAE,EACF,UAACI,GAAG,EAAEC,GAAG,EAAK;MACV,IAAGD,GAAG,EAAEF,MAAM,CAACI,IAAI,CAACF,GAAG,CAAC;MAExBH,OAAO,CAACK,IAAI,CAACD,GAAG,CAAC;IACrB,CAAC,EACD,UAACD,GAAG,EAAK;MACL,IAAGA,GAAG,EAAE,OAAON,IAAI,CAACM,GAAG,EAAE,IAAI,CAAC;MAC9B,IAAGF,MAAM,CAACK,MAAM,GAAG,CAAC,EAAE,OAAOT,IAAI,CAACI,MAAM,EAAE,IAAI,CAAC;MAE/C,OAAOJ,IAAI,CAAC,IAAI,EAAEG,OAAO,CAAC;IAC9B,CAAC,CACJ;EACL;AACJ,CAAC;AAKD,IAAMa,UAAU,GAAG,SAAbA,UAAUA,CAAIL,OAAO,EAAEC,UAAU,EAAEZ,IAAI,EAAK;EAC9C,IAAGW,OAAO,KAAKV,SAAS,IAAIU,OAAO,KAAK,IAAI,IAAIC,UAAU,KAAKX,SAAS,IAAIW,UAAU,KAAK,IAAI,EAAC;IAC5F,OAAOZ,IAAI,CAAC,IAAI,CAAC;EACrB;EAEA,IAAIE,KAAK,GAAG,4EAA4E;EAExFN,EAAE,CAACqB,GAAG,CAACf,KAAK,EAAE,CAACS,OAAO,EAAEC,UAAU,CAAC,EAAE,UAASN,GAAG,EAAEC,GAAG,EAAC;IACnD,IAAGD,GAAG,EAAE;MACJ,OAAON,IAAI,CAACM,GAAG,EAAE,IAAI,CAAC;IAC1B;IAEA,OAAON,IAAI,CAAC,KAAK,EAAEO,GAAG,CAAC;EAC3B,CAAC,CAAC;AACN,CAAC;AAID,IAAMW,aAAa,GAAG,SAAhBA,aAAaA,CAAIP,OAAO,EAAEC,UAAU,EAAEZ,IAAI,EAAK;EACjD,IAAGW,OAAO,KAAKV,SAAS,IAAIU,OAAO,KAAK,IAAI,IAAIC,UAAU,KAAKX,SAAS,IAAIW,UAAU,KAAK,IAAI,EAAC;IAC5F,OAAOZ,IAAI,CAAC,IAAI,CAAC;EACrB;EAEA,IAAIE,KAAK,GAAG,qFAAqF;EAEjGN,EAAE,CAACiB,GAAG,CAACX,KAAK,EAAE,CAACS,OAAO,EAAEC,UAAU,CAAC,EAAE,UAASN,GAAG,EAAC;IAC9C,IAAGA,GAAG,EAAE;MACJ,OAAON,IAAI,CAACM,GAAG,CAAC;IACpB;IAEA,OAAON,IAAI,CAAC,KAAK,CAAC;EACtB,CAAC,CAAC;AACN,CAAC;AAID,IAAMmB,eAAe,GAAG,SAAlBA,eAAeA,CAAIR,OAAO,EAAEC,UAAU,EAAEZ,IAAI,EAAK;EACnD,IAAGW,OAAO,KAAKV,SAAS,IAAIU,OAAO,KAAK,IAAI,IAAIC,UAAU,KAAKX,SAAS,IAAIW,UAAU,KAAK,IAAI,EAAC;IAC5F,OAAOZ,IAAI,CAAC,IAAI,CAAC;EACrB;EAEA,IAAIE,KAAK,GAAG,qFAAqF;EAEjGN,EAAE,CAACiB,GAAG,CAACX,KAAK,EAAE,CAACS,OAAO,EAAEC,UAAU,CAAC,EAAE,UAASN,GAAG,EAAC;IAC9C,IAAGA,GAAG,EAAE;MACJ,OAAON,IAAI,CAACM,GAAG,CAAC;IACpB;IAEA,OAAON,IAAI,CAAC,KAAK,CAAC;EACtB,CAAC,CAAC;AACN,CAAC;AAGDoB,MAAM,CAACC,OAAO,GAAG;EACbvB,YAAY,EAAZA,YAAY;EACZY,WAAW,EAAXA,WAAW;EACXI,cAAc,EAAdA,cAAc;EACdC,WAAW,EAAXA,WAAW;EACXC,UAAU,EAAVA,UAAU;EACVE,aAAa,EAAbA,aAAa;EACbC,eAAe,EAAfA;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}